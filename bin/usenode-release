#!/bin/bash

CURRENT_DIR=$(pwd)

PROJECT=$1
NEW_VERSION=$2
PACKAGE="$PROJECT/package.json"

if [ "x$PROJECT" = "x" ]; then
    echo "Usage: usenode-publish path/to/project [new_version]"
    exit 1
fi

if [ ! -r $PACKAGE ]; then
    echo "Could not find package.json at $PACKAGE"
    exit 1
fi

UNCOMMITTED_CHANGES_CHECK=`cd $PROJECT; git status --porcelain`

if [ "x$UNCOMMITTED_CHANGES_CHECK" != "x" ]; then
    echo "Error: There are uncommited changes"
    echo "$UNCOMMITTED_CHANGES_CHECK"
    exit 1
fi

PROJECT_NAME=`sed -n 's/[ ,]//g; s/.*"name":"\(.*\)".*/\1/p' $PACKAGE`
echo "Publishing '$PROJECT_NAME'."

CURRENT_VERSION=`sed -n 's/[ ,]//g; s/.*"version":"\(.*\)".*/\1/p' $PACKAGE`
echo "Current version is $CURRENT_VERSION."

if [ "x$NEW_VERSION" = "x" ]; then
    echo "Enter the new version:"
    read NEW_VERSION

    if [ "x$NEW_VERSION" = "x" ]; then
        echo "No new version specified."
        exit 1
    fi
fi

if [ "$CURRENT_VERSION" == "$NEW_VERSION" ]; then
    echo "Cannot create release, $NEW_VERSION is the current version."
    exit 1
fi

echo "Creating version $NEW_VERSION"
sed /version/s/$CURRENT_VERSION/$NEW_VERSION/ $PACKAGE > $PACKAGE.tmp && mv $PACKAGE.tmp $PACKAGE

(cd $PROJECT
git commit -m "Version for release $NEW_VERSION" package.json
git tag v$NEW_VERSION
git push origin master
git push --tags)

npm publish $PROJECT
